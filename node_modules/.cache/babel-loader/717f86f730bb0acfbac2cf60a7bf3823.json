{"ast":null,"code":"var _jsxFileName = \"/Users/lau/Desktop/unit-4-project/unit4_frontend/blog/src/App.js\";\n// ================\n// DEPENDENCIES\n// ================\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport EntryForm from './components/EntryForm';\nimport AllEntries from './components/AllEntries'; // =================\n// COMPONENT\n// =================\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentView: 'all',\n      entries: [] // method binding\n\n    };\n    this.handleView = this.handleView.bind(this);\n    this.fetchEntries = this.fetchEntries.bind(this);\n    this.setEntries = this.setEntries.bind(this);\n  } // method to change views\n\n\n  handleView(view) {\n    this.setState({\n      currentView: view\n    });\n  } // method to retreive data from API on load\n\n\n  componentDidMount() {} // API call\n\n\n  fetchEntries() {} // fetch()\n  // .then(data => data.json())\n  // .then(jData => {\n  //     console.log(jData)\n  //     this.setEntries(jdata)\n  // })\n  // method to set state\n\n\n  setEntries(entries) {\n    this.setState({\n      entries: entries\n    });\n  } // method to create new entry \n\n\n  handleCreateEntry(entry) {// fetch('', {\n    //     body: JSON.stringify(entry),\n    //     method: 'POST',\n    //     headers: {\n    //         'Accept': 'application/json, text/plain, */*',\n    //         'Content-Type': 'application/json'\n    //     }\n    // }).then (createdEntry => {\n    //     return createdEntry.json()\n    // }).then( jData => {\n    //     // not sure if we will use these two methods (depends on how many arrays we have)\n    //     updateArray(jData, array)\n    //     this.handleView()\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentView: this.state.currentView,\n      handleView: this.handleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(EntryForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(AllEntries, {\n      currentView: this.state.currentView,\n      entries: this.state.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n} // ================\n// EXPORT\n// ================\n\n\nexport default App;","map":{"version":3,"sources":["/Users/lau/Desktop/unit-4-project/unit4_frontend/blog/src/App.js"],"names":["React","Component","Header","EntryForm","AllEntries","App","constructor","props","state","currentView","entries","handleView","bind","fetchEntries","setEntries","view","setState","componentDidMount","handleCreateEntry","entry","render"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,OAAO,EAAE,EAFA,CAIb;;AAJa,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH,GAXuB,CAaxB;;;AACAD,EAAAA,UAAU,CAACI,IAAD,EAAO;AACb,SAAKC,QAAL,CAAe;AAAEP,MAAAA,WAAW,EAAEM;AAAf,KAAf;AACH,GAhBuB,CAkBxB;;;AACAE,EAAAA,iBAAiB,GAAG,CAEnB,CArBuB,CAuBxB;;;AACAJ,EAAAA,YAAY,GAAG,CAOd,CAPW,CACR;AACA;AACA;AACA;AACA;AACA;AAGJ;;;AACAC,EAAAA,UAAU,CAACJ,OAAD,EAAU;AAChB,SAAKM,QAAL,CAAc;AACVN,MAAAA,OAAO,EAAEA;AADC,KAAd;AAGH,GAtCuB,CAwCxB;;;AACAQ,EAAAA,iBAAiB,CAAEC,KAAF,EAAS,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACA,MAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,WADxB;AAEA,MAAA,UAAU,EAAE,KAAKE,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,UAAD;AACA,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,WADxB;AAEA,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcH;;AAzEuB,C,CA4E5B;AACA;AACA;;;AACA,eAAeL,GAAf","sourcesContent":["// ================\n// DEPENDENCIES\n// ================\nimport React , { Component } from 'react';\nimport Header from './components/Header';\nimport EntryForm from './components/EntryForm';\nimport AllEntries from './components/AllEntries';\n\n// =================\n// COMPONENT\n// =================\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentView: 'all',\n            entries: []\n        }\n        // method binding\n        this.handleView = this.handleView.bind(this);\n        this.fetchEntries = this.fetchEntries.bind(this);\n        this.setEntries = this.setEntries.bind(this);\n    }\n\n    // method to change views\n    handleView(view) {\n        this.setState( { currentView: view } )\n    }\n\n    // method to retreive data from API on load\n    componentDidMount() {\n\n    }\n\n    // API call\n    fetchEntries() {\n        // fetch()\n        // .then(data => data.json())\n        // .then(jData => {\n        //     console.log(jData)\n        //     this.setEntries(jdata)\n        // })\n    }\n\n    // method to set state\n    setEntries(entries) {\n        this.setState({\n            entries: entries\n        })\n    }\n\n    // method to create new entry \n    handleCreateEntry (entry) {\n        // fetch('', {\n        //     body: JSON.stringify(entry),\n        //     method: 'POST',\n        //     headers: {\n        //         'Accept': 'application/json, text/plain, */*',\n        //         'Content-Type': 'application/json'\n        //     }\n        // }).then (createdEntry => {\n        //     return createdEntry.json()\n        // }).then( jData => {\n        //     // not sure if we will use these two methods (depends on how many arrays we have)\n        //     updateArray(jData, array)\n        //     this.handleView()\n        // })\n    }\n\n    render() {\n        return (\n          <div className=\"App\">\n            <Header\n            currentView={this.state.currentView}\n            handleView={this.handleView}\n            />\n            <EntryForm />\n            <AllEntries\n            currentView={this.state.currentView}\n            entries={this.state.entries}\n            />\n\n          </div>\n        );\n    }\n}\n\n// ================\n// EXPORT\n// ================\nexport default App;\n"]},"metadata":{},"sourceType":"module"}