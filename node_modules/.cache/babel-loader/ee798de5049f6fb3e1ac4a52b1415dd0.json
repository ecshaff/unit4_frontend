{"ast":null,"code":"var _jsxFileName = \"/Users/lau/Desktop/unit-4-project/unit4_frontend/blog/src/App.js\";\n// ================\n// DEPENDENCIES\n// ================\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport EntryForm from './components/EntryForm';\nimport AllEntries from './components/AllEntries'; // =================\n// COMPONENT\n// =================\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentView: 'all',\n      newerEntries: [],\n      oldEntries: [] // method binding\n\n    };\n    this.handleView = this.handleView.bind(this);\n    this.fetchEntries = this.fetchEntries.bind(this);\n    this.sortEntries = this.sortEntries.bind(this);\n  } // method to change views\n\n\n  handleView(view) {\n    this.setState({\n      currentView: view\n    });\n  } // method to retreive data from API on load\n\n\n  componentDidMount() {} // API call\n\n\n  fetchEntries() {} // fetch()\n  // .then(data => data.json())\n  // .then(jData => {\n  //     console.log(jData)\n  //     this.sortEntries(jdata)\n  // })\n  // method to sort seperate data into arrays\n\n\n  sortEntries(entries) {\n    let newerEntries = [];\n    let oldEntries = [];\n    entries.forEach(entry => {\n      if (entry.status == 'old') {\n        oldEntries.push(entry);\n      } else {\n        newerEntries.push(entry);\n      }\n    });\n    this.setEntries(newerEntries, oldEntries);\n  } // method to set state\n\n\n  setEntries(newer, old) {\n    this.setState({\n      newerEntries: newer,\n      oldEntries: old\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentView: this.state.currentView,\n      handleView: this.handleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(EntryForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(AllEntries, {\n      currentView: this.state.currentView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n} // ================\n// EXPORT\n// ================\n\n\nexport default App;","map":{"version":3,"sources":["/Users/lau/Desktop/unit-4-project/unit4_frontend/blog/src/App.js"],"names":["React","Component","Header","EntryForm","AllEntries","App","constructor","props","state","currentView","newerEntries","oldEntries","handleView","bind","fetchEntries","sortEntries","view","setState","componentDidMount","entries","forEach","entry","status","push","setEntries","newer","old","render"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,UAAU,EAAE,EAHH,CAKb;;AALa,KAAb;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AAEH,GAbuB,CAexB;;;AACAD,EAAAA,UAAU,CAACI,IAAD,EAAO;AACb,SAAKC,QAAL,CAAe;AAAER,MAAAA,WAAW,EAAEO;AAAf,KAAf;AACH,GAlBuB,CAoBxB;;;AACAE,EAAAA,iBAAiB,GAAG,CAEnB,CAvBuB,CAyBxB;;;AACAJ,EAAAA,YAAY,GAAG,CAOd,CAPW,CACR;AACA;AACA;AACA;AACA;AACA;AAGJ;;;AACAC,EAAAA,WAAW,CAAEI,OAAF,EAAW;AACtB,QAAIT,YAAY,GAAG,EAAnB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACIQ,IAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACC,MAAN,IAAgB,KAApB,EAA2B;AACvBX,QAAAA,UAAU,CAACY,IAAX,CAAgBF,KAAhB;AACH,OAFD,MAEO;AACHX,QAAAA,YAAY,CAACa,IAAb,CAAkBF,KAAlB;AACH;AACJ,KAND;AAOA,SAAKG,UAAL,CAAgBd,YAAhB,EAA8BC,UAA9B;AACH,GA/CuB,CAiDxB;;;AACAa,EAAAA,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAa;AACnB,SAAKT,QAAL,CAAc;AACVP,MAAAA,YAAY,EAAEe,KADJ;AAEVd,MAAAA,UAAU,EAAEe;AAFF,KAAd;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACA,MAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWC,WADxB;AAEA,MAAA,UAAU,EAAE,KAAKG,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAWH;;AArEuB,C,CAwE5B;AACA;AACA;;;AACA,eAAeJ,GAAf","sourcesContent":["// ================\n// DEPENDENCIES\n// ================\nimport React , { Component } from 'react';\nimport Header from './components/Header';\nimport EntryForm from './components/EntryForm';\nimport AllEntries from './components/AllEntries';\n\n// =================\n// COMPONENT\n// =================\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentView: 'all',\n            newerEntries: [],\n            oldEntries: []\n        }\n        // method binding\n        this.handleView = this.handleView.bind(this);\n        this.fetchEntries = this.fetchEntries.bind(this);\n        this.sortEntries = this.sortEntries.bind(this);\n\n    }\n\n    // method to change views\n    handleView(view) {\n        this.setState( { currentView: view } )\n    }\n\n    // method to retreive data from API on load\n    componentDidMount() {\n\n    }\n\n    // API call\n    fetchEntries() {\n        // fetch()\n        // .then(data => data.json())\n        // .then(jData => {\n        //     console.log(jData)\n        //     this.sortEntries(jdata)\n        // })\n    }\n\n    // method to sort seperate data into arrays\n    sortEntries (entries) {\n    let newerEntries = []\n    let oldEntries = []\n        entries.forEach((entry) => {\n            if (entry.status == 'old') {\n                oldEntries.push(entry)\n            } else {\n                newerEntries.push(entry)\n            }\n        })\n        this.setEntries(newerEntries, oldEntries)\n    }\n\n    // method to set state\n    setEntries(newer, old) {\n        this.setState({\n            newerEntries: newer,\n            oldEntries: old\n        })\n    }\n\n    render() {\n        return (\n          <div className=\"App\">\n            <Header\n            currentView={this.state.currentView}\n            handleView={this.handleView}\n            />\n            <EntryForm />\n            <AllEntries currentView={this.state.currentView} />\n\n          </div>\n        );\n    }\n}\n\n// ================\n// EXPORT\n// ================\nexport default App;\n"]},"metadata":{},"sourceType":"module"}